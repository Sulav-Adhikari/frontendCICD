# name: Infra plan and apply
# on:
#   push:
#     branches:
#       - dev
            
#   pull_request:
#     types: [closed]
#     branches:
#       - dev
#       - main
# jobs:
#   determine-env:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Determine Environment 
#         id: determine
#         run: | 
#           if [[ "${{ github.event.pull_request.base.ref }}" == "main" ]]; then     
#             echo "env_name=prod" >> $GITHUB_ENV     
#             echo "::set-output name=env_name::prod"
#           elif [[ "${{ github.event.pull_request.base.ref }}" == "dev" ]]; then
#             echo "env_name=dev" >> $GITHUB_ENV
#             echo "::set-output name=env_name::dev"
#           fi
#           echo "Environment :${{steps.determine.outputs.env_name}}"

#   build: 
#     name: Build and release
#     runs-on: ubuntu-latest
#     needs: [determine-env]
#     environment: ${{ needs.determine-env.outputs.env_name}}
#     env: 
#       GH_TOKEN: ${{ secrets.GITHUB_TOKEN}}
#       TF_IN_AUTOMATION: true
    
#     steps: 
#       - name: Checkout 
#         uses: actions/checkout@v4

#       - name: Configure terraform
#         uses: hashicorp/setup-terraform@v3
#         with: 
#           terraform_version: "1.9.3"

#       - name: Terraform format
#         run: terraform fmt -check -recursive
        
#       - name: Terraform init
#         run: terraform init
#         env: 
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
#           AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      
#       - name: Terraform validate
#         run: terraform validate

#       - name: Switch workplace according to branch
#         run: terraform workspace select $WORKSPACE
#         env: 
#           WORKSPACE: ${{ needs.determine-env.outputs.env_name }}
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
#           AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      
#       - name:
#         run: terraform apply -auto-approve
#         if: github.event.pull_request.merged
#         env:
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}



  