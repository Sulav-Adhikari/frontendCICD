name: Artifact Release
on:
  pull_request:
    types: [ closed ]
    branches:
      - dev
      - main

jobs:      
  release: 
    permissions:
      contents: write
      issues: write
      pull-requests: write
    runs-on: ubuntu-latest

    steps: 
      - name: checkout code
        uses: actions/checkout@v3

      - name: Setup semver
        run: |
          curl https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver -o /usr/local/bin/semver
          chmod +x /usr/local/bin/semver
          semver --version
      
      - name: Current tag
        id: get-version
        run: |
          git fetch --tags
          current_version=$(git tag --sort=-version:refname | head -n 1 | cut -c2-)
          echo "current_version=$current_version" >> $GITHUB_ENV

          commit_message=$(git log -1 --pretty=%B)

          if [ -z "$current_version" ]; then
            new_version=1.0.0
          elif [[ $commit_message =~ ^\[major\] ]]; then
            new_version=$(semver bump major "$current_version")
          elif [[ $commit_message =~ ^\[feat\] ]]; then
            new_version=$(semver bump minor "$current_version")
          else
            new_version=$(semver bump patch "$current_version")
          fi
          echo new_version=$new_version
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Prepare artifact
        id: prep
        run: |

          if [[ ${{ github.event.pull_request.merged }} == 'true' ]]; then
            VERSION=v${{ steps.get-version.outputs.new_version }}
          fi
            
          ARTIFACT_NAME=${VERSION}.zip
          zip -r dist.zip *.tf
          mv dist.zip ${ARTIFACT_NAME}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "artifact_name=${ARTIFACT_NAME}" >> $GITHUB_OUTPUT
          echo artifact_name=$ARTIFACT_NAME
          
          
      - name: Create GitHub Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          automatic_release_tag: "${{ steps.prep.outputs.version }}"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          files: ${{ steps.prep.outputs.artifact_name }}  